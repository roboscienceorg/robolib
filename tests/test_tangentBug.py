from context import tanBug, helper



def test_tangentBug1():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,24,23,22,21,20,19,19,19,19,19,19,19,19,19,19,19,19,19],
                   [25,24,23,22,21,20,19,18,18,18,18,18,18,18,18,18,18,18,18],
                   [25,24,23,22,21,20,19,18,17,17,17,17,17,17,17,17,17,17,17],
                   [24,24,23,22,21,20,19,18,17,16,16,16,16,16,16,16,16,16,16],
                   [23,23,-1,-1,-1,-1,-1,-1,-1,16,15,15,15,15,15,15,15,15,15],
                   [22,22,-1,-1,-1,-1,-1,-1,-1,16,15,14,14,14,14,14,14,14,14],
                   [21,21,-1,-1,-1,-1,-1,-1,-1,16,15,14,13,13,13,13,13,13,13],
                   [20,20,-1,-1,-1,-1,-1,-1,-1,16,15,14,13,12,12,12,12,12,12],
                   [19,19,19,19,19,19,19,18,17,16,15,14,13,12,11,11,11,11,11],
                   [19,18,18,18,18,18,19,18,17,16,15,14,13,12,11,10,10,10,10],
                   [19,18,17,17,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 9, 9, 9],
                   [19,18,17,16,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 8, 8],
                   [19,18,17,16,15,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 7, 7],
                   [19,18,17,16,15,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 6, 6],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 5, 5, 5, 5],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 4, 4, 4],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]
    
    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0,20, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0,20, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
                 
    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug2():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],
                   [19,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18],
                   [19,18,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17],
                   [19,18,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16],
                   [19,18,17,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15],
                   [19,18,17,16,15,14,14,14,14,14,14,14,14,14,14,14,14,14,14],
                   [19,18,17,16,15,14,13,13,13,13,13,13,13,13,13,13,13,13,13],
                   [19,18,17,16,15,14,13,12,12,12,12,12,12,12,12,12,12,12,12],
                   [19,18,17,16,15,14,13,12,11,11,11,11,11,11,11,11,11,11,11],
                   [19,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,10,10],
                   [19,18,17,16,15,14,13,12,11,10, 9, 9, 9, 9, 9, 9, 9, 9, 9],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 8, 8, 8, 8, 8, 8, 8],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 7, 7, 7, 7, 7, 7],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 6, 6, 6, 6, 6],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 5, 5, 5, 5],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 4, 4, 4],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]

    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug3():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,22,21,20,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19],
                   [23,22,21,20,19,18,18,18,18,18,18,18,18,18,18,18,18,18,18],
                   [23,22,21,20,19,18,17,17,17,17,17,17,17,17,17,17,17,17,17],
                   [23,22,21,20,19,18,17,16,16,16,16,16,16,16,16,16,16,16,16],
                   [22,22,21,20,19,18,17,16,15,15,15,15,15,15,15,15,15,15,15],
                   [21,21,21,20,19,18,17,16,15,14,14,14,14,14,14,14,14,14,14],
                   [20,20,20,-1,-1,-1,-1,-1,-1,-1,13,13,13,13,13,13,13,13,13],
                   [20,19,19,-1,-1,-1,-1,-1,-1,-1,12,12,12,12,12,12,12,12,12],
                   [20,19,18,-1,-1,-1,-1,-1,-1,-1,11,11,11,11,11,11,11,11,11],
                   [19,19,18,17,16,15,14,13,12,11,10,10,10,10,10,10,10,10,10],
                   [19,18,18,17,16,15,14,13,12,11,10, 9, 9, 9, 9, 9, 9, 9, 9],
                   [19,18,17,17,16,15,14,13,12,11,10, 9, 8, 8, 8, 8, 8, 8, 8],
                   [19,18,17,16,16,15,14,-1,-1,-1,-1,-1,-1, 7, 7, 7, 7, 7, 7],
                   [19,18,17,16,15,15,15,-1,-1,-1,-1,-1,-1, 6, 6, 6, 6, 6, 6],
                   [19,18,17,16,15,14,14,-1,-1,-1,-1,-1,-1,-1, 5, 5, 5, 5, 5],
                   [19,18,17,16,15,14,13,-1,-1,-1,-1,-1,-1,-1, 5, 4, 4, 4, 4],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]
                      
    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug4():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,25,24,23,22,21,20,19,19,19,19,19,19,19,19,19,19,19,19],
                   [26,25,24,23,22,21,20,19,18,18,18,18,18,18,18,18,18,18,18],
                   [26,25,24,23,22,21,20,19,18,17,17,17,17,17,17,17,17,17,17],
                   [26,25,24,23,22,21,20,19,18,17,16,16,16,16,16,16,16,16,16],
                   [26,25,24,23,22,21,20,19,18,17,16,15,15,15,15,15,15,15,15],
                   [26,25,24,23,22,21,20,19,18,17,16,15,14,14,14,14,14,14,14],
                   [26,25,24,23,-1,-1,-1,-1,-1,-1,-1,15,14,13,13,13,13,13,13],
                   [26,25,24,24,-1,-1,-1,-1,-1,-1,-1,15,14,13,12,12,12,12,12],
                   [26,25,24,23,-1,-1,-1,-1,-1,-1,-1,15,14,13,12,11,11,11,11],
                   [26,25,24,23,22,21,20,19,18,17,16,-1,-1,-1,-1,-1,10,10,10],
                   [26,25,24,23,22,21,20,19,18,17,17,-1,-1,-1,-1,-1, 9, 9, 9],
                   [26,25,24,23,22,21,20,19,18,18,18,-1,-1,-1,-1,-1, 8, 8, 8],
                   [26,25,24,23,22,21,20,19,19,19,19,-1,-1,-1,-1,-1, 7, 7, 7],
                   [26,25,24,23,22,21,20,20,20,20,20,-1,-1,-1,-1,-1, 6, 6, 6],
                   [26,25,24,23,22,21,21,21,21,21,21,-1,-1,-1,-1,-1, 5, 5, 5],
                   [26,25,24,23,22,22,22,22,22,22,22,-1,-1,-1,-1,-1, 4, 4, 4],
                   [26,25,24,23,23,23,-1,-1,-1,-1,-1,-1,-1,-1, 5, 4, 3, 3, 3],
                   [26,25,24,24,24,24,-1,-1,-1,-1,-1,-1,-1,-1, 5, 4, 3, 2, 2],
                   [26,25,25,25,25,25,-1,-1,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]
                                        
    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0,20, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0,20, 0,20, 0,20, 0,20,20, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug5():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2, 0, 0, 0, 0, 0, 0, 0,-1,-1,-1, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0, 0, 0,-1,-1,-1,-1, 0, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0, 0],
                   [0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0],
                   [0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0, 0],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0, 0],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0, 0],
                   [0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0, 0],
                   [0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0],
                   [0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 0],
                   [0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [0, 0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [0, 0, 0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [0, 0, 0, 0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 4],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0,-1,-1,-1,-1,-1,-1,-1,-1, 3, 3],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1,-1,-1,-1,-1, 3, 2, 2],
                   [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,-1,-1,-1, 4, 3, 2, 1]]
    
    checkPath = [[20,20,20,20,20,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [20,20,20,20,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [20,20,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [20,20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [20,20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [20,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == False
    assert tanBug.path == checkPath



def test_tangentBug6():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,27,27,27,27,27,27,27,30,30,30,31,32,33,34,35,36,37,38],
                   [26,26,26,26,26,26,26,-1,-1,29,30,31,32,33,34,35,36,37,38],
                   [25,25,25,25,25,25,25,-1,-1,-1,30,31,32,33,34,35,36,37,38],
                   [24,24,24,24,24,24,24,-1,-1,-1,-1,31,32,33,34,35,36,37,38],
                   [23,23,23,23,23,23,23,-1,-1,-1,-1,-1,32,33,34,35,36,37,38],
                   [22,22,22,22,22,22,22,-1,-1,-1,-1,-1,-1,33,34,35,36,37,38],
                   [21,21,21,21,21,21,21,-1,-1,-1,-1,-1,-1,-1,34,35,36,37,38],
                   [20,20,20,20,20,20,20,-1,-1,-1,-1,-1,-1,-1,35,35,36,37,38],
                   [19,19,19,19,19,19,19,-1,-1,-1,-1,-1,-1,-1,-1,36,36,37,38],
                   [19,18,18,18,18,18,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,37,37,38],
                   [19,18,17,17,17,17,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,38,38],
                   [19,18,17,16,16,16,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,39],
                   [19,18,17,16,15,15,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [19,18,17,16,15,14,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 5, 5, 5, 5],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 4, 4, 4],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]

    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20,20,20,20,20,20,20,20,20, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug7():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,25,25,25,25,25,25,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [24,24,24,24,24,24,24,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [23,23,23,23,23,23,23,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,22,22,22,22,22,22,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,21,21,21,21,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,20,20,20,20,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,19,19,19,19,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,19,18,18,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,19,18,17,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,19,18,17,16,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [22,21,20,19,18,17,16,15,14,13,12,11,10, 9, 9, 9, 9, 9, 9],
                   [22,21,20,19,18,17,16,15,14,13,12,11,10, 9, 8, 8, 8, 8, 8],
                   [-1,-1,-1,19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 7, 7, 7],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 6, 6, 6],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 5, 5, 5],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 4, 4, 4],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,-1,-1,-1,-1,-1,-1,-1,-1, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]
    
    checkPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0,20,20,20,20,20,20,20, 0, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                 [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.]]


    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == checkPath



def test_tangentBug8():
    helper.max_index = 19
    tanBug.reached = False
    tanBug.start = (0, 0)
    tanBug.goal = (18, 18)
    tanBug.path = [[0 for _ in range(20)] for _ in range(20)]
    tanBug.path[0][0] = 20
    tanBug.visited = [[False for _ in range(19)] for _ in range(19)]
    tanBug.visited[0][0] = True
    
    tanBug.grid = [[-2,81,80,79,78,77,76,75,74,73,72,71,70,69,69,69,69,69,69],
                   [82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,68,68,68,68],
                   [82,81,80,79,78,77,76,75,74,73,72,71,70,69,68,67,67,67,67],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,66,66,67],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,65,66,67],
                   [52,52,52,52,55,56,57,58,59,60,61,62,63,64,65,66,66,66,67],
                   [51,51,51,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [51,50,50,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [51,50,49,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [51,50,49,48,47,46,45,44,43,42,41,40,39,38,37,36,35,35,35],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,34,34],
                   [-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,33,34],
                   [20,20,20,20,20,21,22,25,26,27,28,29,30,31,32,33,34,34,34],
                   [19,19,19,19,21,21,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [19,18,18,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [19,18,17,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 3, 3],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 2],
                   [19,18,17,16,15,14,13,12,11,10, 9, 8, 7, 6, 5, 4, 3, 2, 1]]
    
    testPath = [[20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0,20, 0,20, 0,20, 0,20, 0,20, 0,20, 0,20, 0, 0, 0, 0, 0, 0],
                [ 0, 0,20, 0,20, 0,20, 0,20, 0,20, 0,20, 0,20,20, 0, 0, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0, 0],
                [ 0, 0, 0,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 0, 0, 0],
                [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0, 0,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 0, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                [ 0, 0, 0, 0,20, 0,20,20,20,20,20,20,20,20,20,20,20,20, 0, 0],
                [ 0, 0, 0,20, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0,20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                [ 0, 0, 0,20,20,20,20,20,20,20,20,20,20,20,20,20,20, 0, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,20, 0],
                [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]

    found = tanBug.tangentBug(0, 0, 0, 0)
    assert found == True
    assert tanBug.path == testPath



